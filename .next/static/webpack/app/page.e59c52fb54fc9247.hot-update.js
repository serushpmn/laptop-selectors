"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/repository.ts":
/*!***************************!*\
  !*** ./lib/repository.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   debugDatabase: function() { return /* binding */ debugDatabase; },\n/* harmony export */   getAllPrograms: function() { return /* binding */ getAllPrograms; },\n/* harmony export */   getCategories: function() { return /* binding */ getCategories; },\n/* harmony export */   getCpuScores: function() { return /* binding */ getCpuScores; },\n/* harmony export */   getFeatures: function() { return /* binding */ getFeatures; },\n/* harmony export */   getGpuScores: function() { return /* binding */ getGpuScores; },\n/* harmony export */   getLaptopComponentScores: function() { return /* binding */ getLaptopComponentScores; },\n/* harmony export */   getLaptopMinPrices: function() { return /* binding */ getLaptopMinPrices; },\n/* harmony export */   getLaptopsFull: function() { return /* binding */ getLaptopsFull; },\n/* harmony export */   getPorts: function() { return /* binding */ getPorts; },\n/* harmony export */   getProgramsByCategory: function() { return /* binding */ getProgramsByCategory; }\n/* harmony export */ });\n/* harmony import */ var _supabaseClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabaseClient */ \"(app-pages-browser)/./lib/supabaseClient.ts\");\n\nasync function getCategories() {\n    const { data, error } = await _supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"categories\").select(\"id, fa_name, name, icon, desc\").order(\"id\");\n    if (error) {\n        console.error(\"❌ Error fetching categories:\", error);\n        throw error;\n    }\n    console.log(\"\\uD83D\\uDCC2 Categories fetched:\", data);\n    return data || [];\n}\nasync function debugDatabase() {\n    console.log(\"\\uD83D\\uDD0D Debugging database...\");\n    try {\n        // Check categories\n        const { data: categories, error: catError } = await _supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"categories\").select(\"*\");\n        console.log(\"\\uD83D\\uDCC2 Categories:\", categories);\n        console.log(\"\\uD83D\\uDCC2 Categories error:\", catError);\n        // Check programs\n        const { data: programs, error: progError } = await _supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"programs\").select(\"*\");\n        console.log(\"\\uD83D\\uDCF1 Programs:\", programs);\n        console.log(\"\\uD83D\\uDCF1 Programs error:\", progError);\n        // Check if programs table exists and has data\n        if (programs && programs.length > 0) {\n            console.log(\"✅ Programs table has data\");\n            console.log(\"\\uD83D\\uDCCB Sample program:\", programs[0]);\n            console.log(\"\\uD83D\\uDCCB All categories in programs:\", Array.from(new Set(programs.flatMap((p)=>p.category || []))));\n        } else {\n            console.log(\"⚠️ Programs table is empty or has no data\");\n        }\n        // Check if categories match\n        if (categories && programs) {\n            const categoryNames = categories.map((c)=>c.name).filter(Boolean);\n            const programCategories = programs.flatMap((p)=>p.category || []).filter(Boolean);\n            console.log(\"\\uD83D\\uDD17 Category names in categories table:\", categoryNames);\n            console.log(\"\\uD83D\\uDD17 Category values in programs table:\", programCategories);\n            const matchingCategories = categoryNames.filter((cat)=>programCategories.includes(cat));\n            console.log(\"✅ Matching categories:\", matchingCategories);\n            const missingCategories = categoryNames.filter((cat)=>!programCategories.includes(cat));\n            console.log(\"❌ Missing categories in programs:\", missingCategories);\n        }\n    } catch (error) {\n        console.error(\"❌ Debug error:\", error);\n    }\n}\nasync function getAllPrograms() {\n    const { data, error } = await _supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"programs\").select(\"*\");\n    if (error) {\n        console.error(\"❌ Error fetching all programs:\", error);\n        throw error;\n    }\n    console.log(\"\\uD83D\\uDCCB All programs fetched:\", data);\n    return data || [];\n}\nasync function getProgramsByCategory(category) {\n    console.log(\"\\uD83D\\uDD0D Searching for programs with category:\", category);\n    // First, let's see all programs and their categories\n    const { data: allPrograms, error: allError } = await _supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"programs\").select(\"id, name, category\");\n    if (allError) {\n        console.error(\"❌ Error fetching all programs:\", allError);\n        throw allError;\n    }\n    console.log(\"\\uD83D\\uDCCB All programs in database:\", allPrograms);\n    // Now search for specific category\n    if (!category) {\n        return [];\n    }\n    // Use textSearch for array fields or filter manually\n    const { data, error } = await _supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"programs\").select(\"*\");\n    if (error) {\n        console.error(\"❌ Error fetching all programs:\", error);\n        throw error;\n    }\n    // Filter programs manually based on category (support both string and array)\n    const filteredPrograms = (data === null || data === void 0 ? void 0 : data.filter((program)=>{\n        if (!program.category) return false;\n        if (Array.isArray(program.category)) {\n            return program.category.includes(category);\n        } else if (typeof program.category === \"string\") {\n            // Support comma separated or single string\n            try {\n                // Try to parse as JSON array\n                const arr = JSON.parse(program.category);\n                if (Array.isArray(arr)) {\n                    return arr.includes(category);\n                }\n            } catch (e) {\n                // Not a JSON array, treat as single value\n                return program.category === category;\n            }\n        }\n        return false;\n    })) || [];\n    console.log(\"✅ Found programs for category:\", category, \":\", filteredPrograms);\n    return filteredPrograms;\n}\nasync function getFeatures() {\n    const { data, error } = await _supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"features\").select(\"id, name\").order(\"id\");\n    if (error) throw error;\n    return data || [];\n}\nasync function getPorts() {\n    const { data, error } = await _supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"ports\").select(\"id, name\").order(\"id\");\n    if (error) throw error;\n    return data || [];\n}\nasync function getLaptopsFull() {\n    const { data, error } = await _supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"laptop_full_info\").select(\"*\");\n    if (error) throw error;\n    return data || [];\n}\nasync function getLaptopComponentScores() {\n    const { data, error } = await _supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"laptop_component_scores\").select(\"*\");\n    if (error) throw error;\n    return data || [];\n}\nasync function getLaptopMinPrices() {\n    const { data, error } = await _supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"laptop_min_price\").select(\"*\");\n    if (error) throw error;\n    return data || [];\n}\nasync function getCpuScores() {\n    const { data, error } = await _supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"cpu_scores\").select(\"id, score_robust\");\n    if (error) throw error;\n    return data || [];\n}\nasync function getGpuScores() {\n    const { data, error } = await _supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"gpu_scores\").select(\"id, score_robust\");\n    if (error) throw error;\n    return data || [];\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/repository.ts\n"));

/***/ })

});